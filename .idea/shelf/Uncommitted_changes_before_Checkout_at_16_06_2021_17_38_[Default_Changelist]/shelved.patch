Index: src/main/java/com/parkit/parkingsystem/service/FareCalculatorService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.parkit.parkingsystem.service;\r\n\r\nimport com.parkit.parkingsystem.constants.Fare;\r\nimport com.parkit.parkingsystem.model.Ticket;\r\n\r\npublic class FareCalculatorService {\r\n\r\n    public void calculateFare(Ticket ticket){\r\n        if( (ticket.getOutTime() == null) || (ticket.getOutTime().before(ticket.getInTime())) ){\r\n            throw new IllegalArgumentException(\"Out time provided is incorrect:\"+ticket.getOutTime());\r\n        }\r\n\r\n        double inHour = ticket.getInTime().getTime();\r\n        double outHour = ticket.getOutTime().getTime();\r\n\r\n\r\n       double duration = (outHour- inHour)/1000/60/60;\r\n\r\n        switch (ticket.getParkingSpot().getParkingType()){\r\n            case CAR: {\r\n                ticket.setPrice(duration * Fare.CAR_RATE_PER_HOUR);\r\n                break;\r\n            }\r\n            case BIKE: {\r\n                ticket.setPrice(duration * Fare.BIKE_RATE_PER_HOUR);\r\n                break;\r\n            }\r\n            default: throw new IllegalArgumentException(\"Unknown Parking Type\");\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/parkit/parkingsystem/service/FareCalculatorService.java b/src/main/java/com/parkit/parkingsystem/service/FareCalculatorService.java
--- a/src/main/java/com/parkit/parkingsystem/service/FareCalculatorService.java	
+++ b/src/main/java/com/parkit/parkingsystem/service/FareCalculatorService.java	
@@ -5,18 +5,18 @@
 
 public class FareCalculatorService {
 
-    public void calculateFare(Ticket ticket){
-        if( (ticket.getOutTime() == null) || (ticket.getOutTime().before(ticket.getInTime())) ){
-            throw new IllegalArgumentException("Out time provided is incorrect:"+ticket.getOutTime());
+    public void calculateFare(Ticket ticket) {
+        if ((ticket.getOutTime() == null) || (ticket.getOutTime().before(ticket.getInTime()))) {
+            throw new IllegalArgumentException("Out time provided is incorrect:" + ticket.getOutTime());
         }
 
         double inHour = ticket.getInTime().getTime();
         double outHour = ticket.getOutTime().getTime();
 
 
-       double duration = (outHour- inHour)/1000/60/60;
+        double duration = (outHour - inHour) / 1000 / 60 / 60;
 
-        switch (ticket.getParkingSpot().getParkingType()){
+        switch (ticket.getParkingSpot().getParkingType()) {
             case CAR: {
                 ticket.setPrice(duration * Fare.CAR_RATE_PER_HOUR);
                 break;
