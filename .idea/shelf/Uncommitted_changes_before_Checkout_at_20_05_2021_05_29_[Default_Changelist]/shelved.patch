Index: src/test/java/com/parkit/parkingsystem/integration/ParkingDataBaseIT.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.parkit.parkingsystem.integration;\r\n\r\nimport com.parkit.parkingsystem.constants.Fare;\r\nimport com.parkit.parkingsystem.constants.ParkingType;\r\nimport com.parkit.parkingsystem.dao.ParkingSpotDAO;\r\nimport com.parkit.parkingsystem.dao.TicketDAO;\r\nimport com.parkit.parkingsystem.integration.config.DataBaseTestConfig;\r\nimport com.parkit.parkingsystem.integration.service.DataBasePrepareService;\r\nimport com.parkit.parkingsystem.model.Ticket;\r\nimport com.parkit.parkingsystem.service.ParkingService;\r\nimport com.parkit.parkingsystem.util.InputReaderUtil;\r\nimport junit.framework.Assert;\r\nimport org.junit.jupiter.api.AfterAll;\r\nimport org.junit.jupiter.api.BeforeAll;\r\nimport org.junit.jupiter.api.BeforeEach;\r\nimport org.junit.jupiter.api.Test;\r\nimport org.junit.jupiter.api.extension.ExtendWith;\r\nimport org.mockito.Mock;\r\nimport org.mockito.junit.jupiter.MockitoExtension;\r\n\r\nimport java.util.Date;\r\n\r\nimport static org.mockito.Mockito.when;\r\n\r\n@ExtendWith(MockitoExtension.class)\r\npublic class ParkingDataBaseIT {\r\n\r\n    private static DataBaseTestConfig dataBaseTestConfig = new DataBaseTestConfig();\r\n    private static ParkingSpotDAO parkingSpotDAO;\r\n    private static TicketDAO ticketDAO;\r\n    private static DataBasePrepareService dataBasePrepareService;\r\n\r\n    @Mock\r\n    private static InputReaderUtil inputReaderUtil;\r\n\r\n    @BeforeAll\r\n    private static void setUp() throws Exception{\r\n        parkingSpotDAO = new ParkingSpotDAO();\r\n        parkingSpotDAO.dataBaseConfig = dataBaseTestConfig;\r\n        ticketDAO = new TicketDAO();\r\n        ticketDAO.dataBaseConfig = dataBaseTestConfig;\r\n        dataBasePrepareService = new DataBasePrepareService();\r\n    }\r\n\r\n    @BeforeEach\r\n    private void setUpPerTest() throws Exception {\r\n        when(inputReaderUtil.readSelection()).thenReturn(1);\r\n        when(inputReaderUtil.readVehicleRegistrationNumber()).thenReturn(\"ABCDEF\");\r\n        dataBasePrepareService.clearDataBaseEntries();\r\n    }\r\n\r\n    @AfterAll\r\n    private static void tearDown(){\r\n\r\n    }\r\n\r\n    @Test\r\n    public void testParkingACar(){\r\n        ParkingService parkingService = new ParkingService(inputReaderUtil, parkingSpotDAO, ticketDAO);\r\n        parkingService.processIncomingVehicle();\r\n        //TODO: check that a ticket is actualy saved in DB and Parking table is updated with availability\r\n    }\r\n\r\n    @Test\r\n    public void testParkingLotExit(){\r\n\r\n        ParkingService parkingService = new ParkingService(inputReaderUtil, parkingSpotDAO, ticketDAO);\r\n        parkingService.processIncomingVehicle();\r\n        parkingService.processExitingVehicle();\r\n\r\n        Ticket ticketTestParkingExit = ticketDAO.getTicket(\"ABCDEF\");\r\n        double price = ticketTestParkingExit.getPrice();\r\n        long inTimeTestParkingExit = ticketTestParkingExit.getInTime().getTime();\r\n        long outTimeTestParkingExit = ticketTestParkingExit.getOutTime().getTime();\r\n        long timeSpent = (outTimeTestParkingExit - inTimeTestParkingExit)/1000/60/60;\r\n        int AvailableSlotTestParkingExit = parkingSpotDAO.getNextAvailableSlot(ParkingType.CAR);\r\n\r\n        assertTrue(inTimeTestParkingExit < outTimeTestParkingExit);\r\n        assertEquals(1,AvailableSlotTestParkingExit);\r\n        assertEquals(price,(timeSpent* Fare.CAR_RATE_PER_HOUR));\r\n\r\n        //TODO: check that the fare generated and out time are populated correctly in the database\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/com/parkit/parkingsystem/integration/ParkingDataBaseIT.java b/src/test/java/com/parkit/parkingsystem/integration/ParkingDataBaseIT.java
--- a/src/test/java/com/parkit/parkingsystem/integration/ParkingDataBaseIT.java	
+++ b/src/test/java/com/parkit/parkingsystem/integration/ParkingDataBaseIT.java	
@@ -20,6 +20,8 @@
 
 import java.util.Date;
 
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertTrue;
 import static org.mockito.Mockito.when;
 
 @ExtendWith(MockitoExtension.class)
